// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creating java project with enum-typed CLI arg 1`] = `
"import io.github.cdklabs.projen.java.JavaProject;
import io.github.cdklabs.projen.java.JavaProjectOptions;
import io.github.cdklabs.projen.ProjectType;

public class projenrc {
    public static void main(String[] args) {
        JavaProject project = new JavaProject(JavaProjectOptions.builder()
            .artifactId("my-app")
            .groupId("org.acme")
            .name("my-project")
            .projectType(ProjectType.LIB)
            .projenrcJava(true)
            .version("0.1.0")
            .build());
        project.synth();
    }
}"
`;

exports[`creating node project with enum-typed CLI arg 1`] = `
"const { javascript } = require("projen");
const project = new javascript.NodeProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  packageManager: javascript.NodePackageManager.NPM,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;

exports[`creating python project with enum-typed CLI arg 1`] = `
"from projen.python import PythonProject
from projen import ProjectType

project = PythonProject(
    author_email="my@user.email.com",
    author_name="My User Name",
    module_name="my_project",
    name="my-project",
    project_type=ProjectType.LIB,
    projenrc_python=True,
    version="0.1.0",
)

project.synth()"
`;

exports[`projen new --from external 1`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".",
  "author": {
    "email": "info@pepperize.com",
    "name": "Pepperize UG (haftungsbeschränkt)",
    "organization": true,
    "url": "https://www.pepperize.com",
  },
  "dependencies": {
    "aws-cdk-lib": "^2.1.0",
    "constructs": "^10.0.5",
  },
  "devDependencies": {
    "@pepperize/projen-awscdk-app-ts": "0.0.333",
    "@types/jest": "*",
    "@types/node": "^16",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "aws-cdk": "^2.1.0",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-node": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "*",
    "jest-junit": "^15",
    "prettier": "*",
    "projen": "*",
    "standard-version": "^9",
    "ts-jest": "*",
    "ts-node": "*",
    "typescript": "*",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.dev.json",
      },
    },
    "preset": "ts-jest",
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
      "<rootDir>/**/?(*.)@(spec|test).[tj]s?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "MIT",
  "name": "my-project",
  "scripts": {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "bundle": "npx projen bundle",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "deploy": "npx projen deploy",
    "destroy": "npx projen destroy",
    "diff": "npx projen diff",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "format": "npx projen format",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "release": "npx projen release",
    "synth": "npx projen synth",
    "synth:silent": "npx projen synth:silent",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "unbump": "npx projen unbump",
    "watch": "npx projen watch",
  },
  "version": "0.0.0",
}
`;

exports[`projen new --from external 2`] = `
"import { AwsCdkTypeScriptApp } from "@pepperize/projen-awscdk-app-ts";
const project = new AwsCdkTypeScriptApp({
  cdkVersion: "2.1.0",
  defaultReleaseBranch: "main",
  devDeps: ["@pepperize/projen-awscdk-app-ts@0.0.333"],
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;

exports[`projen new --from external tarball 1`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".",
  "author": {
    "email": "info@pepperize.com",
    "name": "Pepperize UG (haftungsbeschränkt)",
    "organization": true,
    "url": "https://www.pepperize.com",
  },
  "dependencies": {
    "aws-cdk-lib": "^2.1.0",
    "constructs": "^10.0.5",
  },
  "devDependencies": {
    "./pepperize-projen-awscdk-app-ts-0.0.333.tgz": "*",
    "@types/jest": "*",
    "@types/node": "^16",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "aws-cdk": "^2.1.0",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-config-prettier": "*",
    "eslint-import-resolver-node": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "eslint-plugin-prettier": "*",
    "jest": "*",
    "jest-junit": "^15",
    "prettier": "*",
    "projen": "*",
    "standard-version": "^9",
    "ts-jest": "*",
    "ts-node": "*",
    "typescript": "*",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.dev.json",
      },
    },
    "preset": "ts-jest",
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
      "<rootDir>/**/?(*.)@(spec|test).[tj]s?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "MIT",
  "name": "my-project",
  "scripts": {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "bundle": "npx projen bundle",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "deploy": "npx projen deploy",
    "destroy": "npx projen destroy",
    "diff": "npx projen diff",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "format": "npx projen format",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "release": "npx projen release",
    "synth": "npx projen synth",
    "synth:silent": "npx projen synth:silent",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "unbump": "npx projen unbump",
    "watch": "npx projen watch",
  },
  "version": "0.0.0",
}
`;

exports[`projen new --from external tarball 2`] = `
"import { AwsCdkTypeScriptApp } from "@pepperize/projen-awscdk-app-ts";
const project = new AwsCdkTypeScriptApp({
  cdkVersion: "2.1.0",
  defaultReleaseBranch: "main",
  devDeps: ["./pepperize-projen-awscdk-app-ts-0.0.333.tgz"],
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;

exports[`projen new awscdk-app-java 1`] = `
{
  "src/test/java/projenrc.java": "import io.github.cdklabs.projen.awscdk.AwsCdkJavaApp;
import io.github.cdklabs.projen.awscdk.AwsCdkJavaAppOptions;

public class projenrc {
    public static void main(String[] args) {
        AwsCdkJavaApp project = new AwsCdkJavaApp(AwsCdkJavaAppOptions.builder()
            .artifactId("my-app")
            .cdkVersion("2.1.0")
            .groupId("org.acme")
            .mainClass("org.acme.MyApp")
            .name("my-project")
            .version("0.1.0")
            .build());
        project.synth();
    }
}",
}
`;

exports[`projen new awscdk-app-py 1`] = `
{
  ".projenrc.py": "from projen.awscdk import AwsCdkPythonApp

project = AwsCdkPythonApp(
    author_email="my@user.email.com",
    author_name="My User Name",
    cdk_version="2.1.0",
    module_name="my_project",
    name="my-project",
    version="0.1.0",
)

project.synth()",
}
`;

exports[`projen new awscdk-app-ts 1`] = `
{
  ".projenrc.ts": "import { awscdk } from "projen";
const project = new awscdk.AwsCdkTypeScriptApp({
  cdkVersion: "2.1.0",
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new awscdk-construct 1`] = `
{
  ".projenrc.ts": "import { awscdk } from "projen";
const project = new awscdk.AwsCdkConstructLibrary({
  author: "My User Name",
  authorAddress: "my@user.email.com",
  cdkVersion: "2.1.0",
  defaultReleaseBranch: "main",
  jsiiVersion: "~5.0.0",
  name: "my-project",
  projenrcTs: true,
  repositoryUrl: "git@boom.com:foo/bar.git",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new cdk8s-app-py 1`] = `
{
  ".projenrc.py": "from projen.cdk8s import Cdk8sPythonApp

project = Cdk8sPythonApp(
    author_email="my@user.email.com",
    author_name="My User Name",
    cdk8s_version="2.3.33",
    module_name="my_project",
    name="my-project",
    version="0.1.0",
)

project.synth()",
}
`;

exports[`projen new cdk8s-app-ts 1`] = `
{
  ".projenrc.ts": "import { cdk8s } from "projen";
const project = new cdk8s.Cdk8sTypeScriptApp({
  cdk8sVersion: "2.3.33",
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new cdk8s-construct 1`] = `
{
  ".projenrc.ts": "import { cdk8s } from "projen";
const project = new cdk8s.ConstructLibraryCdk8s({
  author: "My User Name",
  authorAddress: "my@user.email.com",
  cdk8sVersion: "1.4.10",
  defaultReleaseBranch: "main",
  jsiiVersion: "~5.0.0",
  name: "my-project",
  projenrcTs: true,
  repositoryUrl: "git@boom.com:foo/bar.git",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new cdktf-construct 1`] = `
{
  ".projenrc.ts": "import { cdktf } from "projen";
const project = new cdktf.ConstructLibraryCdktf({
  author: "My User Name",
  authorAddress: "my@user.email.com",
  cdktfVersion: "^0.13.0",
  defaultReleaseBranch: "main",
  jsiiVersion: "~5.0.0",
  name: "my-project",
  projenrcTs: true,
  repositoryUrl: "git@boom.com:foo/bar.git",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new java 1`] = `
{
  "src/test/java/projenrc.java": "import io.github.cdklabs.projen.java.JavaProject;
import io.github.cdklabs.projen.java.JavaProjectOptions;

public class projenrc {
    public static void main(String[] args) {
        JavaProject project = new JavaProject(JavaProjectOptions.builder()
            .artifactId("my-app")
            .groupId("org.acme")
            .name("my-project")
            .version("0.1.0")
            .build());
        project.synth();
    }
}",
}
`;

exports[`projen new jsii 1`] = `
{
  ".projenrc.ts": "import { cdk } from "projen";
const project = new cdk.JsiiProject({
  author: "My User Name",
  authorAddress: "my@user.email.com",
  defaultReleaseBranch: "main",
  jsiiVersion: "~5.0.0",
  name: "my-project",
  projenrcTs: true,
  repositoryUrl: "git@boom.com:foo/bar.git",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new nextjs 1`] = `
{
  ".projenrc.js": "const { web } = require("projen");
const project = new web.NextJsProject({
  defaultReleaseBranch: "main",
  name: "my-project",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
  // tailwind: true,          /* Setup Tailwind CSS as a PostCSS plugin. */
});
project.synth();",
}
`;

exports[`projen new nextjs-ts 1`] = `
{
  ".projenrc.ts": "import { web } from "projen";
const project = new web.NextJsTypeScriptProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
  // tailwind: true,          /* Setup Tailwind CSS as a PostCSS plugin. */
});
project.synth();",
}
`;

exports[`projen new node --outdir path/to/mydir 1`] = `
"const { javascript } = require("projen");
const project = new javascript.NodeProject({
  defaultReleaseBranch: "main",
  name: "my-project",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;

exports[`projen new node 1`] = `
{
  ".projenrc.js": "const { javascript } = require("projen");
const project = new javascript.NodeProject({
  defaultReleaseBranch: "main",
  name: "my-project",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new project 1`] = `{}`;

exports[`projen new python 1`] = `
{
  ".projenrc.py": "from projen.python import PythonProject

project = PythonProject(
    author_email="my@user.email.com",
    author_name="My User Name",
    module_name="my_project",
    name="my-project",
    version="0.1.0",
)

project.synth()",
}
`;

exports[`projen new react 1`] = `
{
  ".projenrc.js": "const { web } = require("projen");
const project = new web.ReactProject({
  defaultReleaseBranch: "main",
  name: "my-project",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new react-ts 1`] = `
{
  ".projenrc.ts": "import { web } from "projen";
const project = new web.ReactTypeScriptProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new typescript 1`] = `
{
  ".projenrc.ts": "import { typescript } from "projen";
const project = new typescript.TypeScriptProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new typescript-app 1`] = `
{
  ".projenrc.ts": "import { typescript } from "projen";
const project = new typescript.TypeScriptAppProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();",
}
`;

exports[`projen new with unknown option works 1`] = `
"const { javascript } = require("projen");
const project = new javascript.NodeProject({
  defaultReleaseBranch: "main",
  name: "my-project",

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;

exports[`projenrc-json creates external project type 1`] = `
{
  "cdkVersion": "2.1.0",
  "defaultReleaseBranch": "main",
  "devDeps": [
    "@pepperize/projen-awscdk-app-ts@0.0.333",
  ],
  "name": "my-project",
  "projenrcJson": true,
  "projenrcTs": true,
  "type": "@pepperize/projen-awscdk-app-ts.AwsCdkTypeScriptApp",
}
`;

exports[`projenrc-json creates java project 1`] = `
{
  ".projenrc.json": {
    "artifactId": "my-app",
    "groupId": "org.acme",
    "name": "my-project",
    "projenrcJson": true,
    "type": "projen.java.JavaProject",
    "version": "0.1.0",
  },
}
`;

exports[`projenrc-json creates node-project 1`] = `
{
  "defaultReleaseBranch": "main",
  "name": "my-project",
  "projenrcJson": true,
  "type": "projen.javascript.NodeProject",
}
`;

exports[`projenrc-ts creates typescript projenrc 1`] = `
"import { typescript } from "projen";
const project = new typescript.TypeScriptProject({
  defaultReleaseBranch: "main",
  name: "my-project",
  projenrcTs: true,

  // deps: [],                /* Runtime dependencies of this module. */
  // description: undefined,  /* The description is just a string that helps people understand the purpose of the package. */
  // devDeps: [],             /* Build dependencies for this module. */
  // packageName: undefined,  /* The "name" in package.json. */
});
project.synth();"
`;
